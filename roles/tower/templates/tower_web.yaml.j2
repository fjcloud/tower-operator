# Tower Secret.
---
apiVersion: v1
kind: Secret
metadata:
  name: '{{ meta.name }}-tower-secret'
  namespace: '{{ meta.namespace }}'
data:
  secret_key: '{{ tower_secret_key | b64encode }}'
  admin_password: '{{ tower_admin_password | b64encode }}'

# Tower Deployment.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ meta.name }}-tower-web'
  namespace: '{{ meta.namespace }}'
  labels:
    app: tower
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tower
  template:
    metadata:
      labels:
         app: tower
    spec:
      containers:
      - image: '{{ tower_web_image }}'
        name: tower
        ports:
        - containerPort: 8052
          name: tower-http
        volumeMounts:
          - name: secret-key
            mountPath: /etc/tower/SECRET_KEY
            subPath: SECRET_KEY
            readOnly: true
          - name: environment
            mountPath: /etc/tower/conf.d/environment.sh
            subPath: environment.sh
            readOnly: true
          - name: settings
            mountPath: /etc/tower/settings.py
            subPath: settings.py
            readOnly: true
          - name: nginx-conf
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            readOnly: true
        resources:
          requests:
            memory: '{{ tower_web_mem_request }}'
            cpu: '{{ tower_web_cpu_request }}'
      volumes:
        - name: secret-key
          secret:
            secretName: '{{ meta.name }}-tower-secret'
            items:
              - key: secret_key
                path: SECRET_KEY
        - name: environment
          configMap:
            name: '{{ meta.name }}-tower-configmap'
            items:
              - key: environment
                path: environment.sh
        - name: settings
          configMap:
            name: '{{ meta.name }}-tower-configmap'
            items:
              - key: settings
                path: settings.py
        - name: nginx-conf
          configMap:
            name: '{{ meta.name }}-tower-configmap'
            items:
              - key: nginx_conf
                path: nginx.conf

# Tower Service.
---
apiVersion: v1
kind: Service
metadata:
  name: '{{ meta.name }}-service'
  namespace: '{{ meta.namespace }}'
  labels:
    app: tower
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: tower-http
    name: webui
  selector:
    app: tower


# Tower Route.
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: '{{ meta.name }}-route'
  namespace: '{{ meta.namespace }}'
  labels:
    app: '{{ meta.name }}'
spec:
  host: '{{ tower_hostname }}'
  to:
    kind: Service
    name: '{{ meta.name }}-service'
    weight: 100
  port:
    targetPort: webui
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: None
  wildcardPolicy: None
